{"version":3,"sources":["components/homepage.js","components/bank/bankcontainer.js","components/government/governmentcontainer.js","components/bank/addbank.js","App.js","serviceWorker.js","components/database.js","index.js","logo.svg"],"names":["Home","react_default","a","createElement","className","this","props","classes","root","Grid","container","spacing","item","xs","Paper","paper","BottomNavigation","showLabels","BottomNavigationAction","component","Link","to","label","icon","CreditCard_default","CardTravel_default","Component","PropTypes","object","isRequired","withStyles","theme","flexGrow","padding","textAlign","color","palette","text","secondary","bottom","position","width","BankContainer","homepage","List","ListItem","ListItemAvatar","Avatar","Image_default","ListItemText","primary","Work_default","maxWidth","backgroundColor","GovernmentCointainer","AddBank","state","bankname","bankaccount","insertBank","forInsert","_this","indexedDB","open","onsuccess","event","tx","target","result","transaction","objectStore","put","oncomplete","history","push","onerror","handleChange","name","setState","Object","defineProperty","value","Fragment","CssBaseline","Container","noValidate","autoComplete","TextField","id","textField","onChange","bind","margin","variant","Button","marginRight","onClick","display","flexWrap","marginLeft","dense","marginTop","menu","button","input","App","react_router_dom","react_router","path","exact","home","bankcontainer","governmentcontainer","addbank","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","onupgradeneeded","database","objectStoreNames","contains","table","createObjectStore","keyPath","autoIncrement","createIndex","unique","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"qXA0BMA,mLAEC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAKC,MAAMC,QAAQC,MAC/BP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrBV,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOV,UAAWC,KAAKC,MAAMC,QAAQQ,OACjCd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAkBC,YAAU,EACxBb,UAAWC,KAAKC,MAAMC,QAAQC,MAC9BP,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAwBC,UAAWC,IAAMC,GAAG,OAAOC,MAAM,OAAOC,KAAMtB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,QACtED,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAwBC,UAAWC,IAAMC,GAAG,aAAaC,MAAM,aAAaC,KAAMtB,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,oBAV9FwB,aAqBnB1B,EAAKM,MAAQ,CACVC,QAASoB,IAAUC,OAAOC,YAGdC,kBAvCA,SAAAC,GAAK,MAAK,CACtBvB,KAAM,CACFwB,SAAU,GAEZjB,MAAO,CACLkB,QAAS,8BACTC,UAAW,SACXC,MAAOJ,EAAMK,QAAQC,KAAKC,UAC1BC,OAAQ,EACRC,SAAS,WACTC,MAAO,UA6BCX,CAAmB9B,GC/B5B0C,mLAEC,OACIzC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACwC,EAAD,MACG1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMxC,UAAWC,KAAKC,MAAMC,QAAQC,MAC7CP,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACE5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACE7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACE9C,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,QAGJD,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAcC,QAAQ,cAExBjD,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACE5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACE7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACE9C,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,QAGJD,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAcC,QAAQ,wBApBFxB,aA4B5BgB,EAAcpC,MAAQ,CACnBC,QAASoB,IAAUC,OAAOC,YAGdC,kBAxCA,CACXtB,KAAM,CACFiC,MAAO,OACPW,SAAU,IACVC,gBAAiB,UAoCVvB,CAAmBY,GCjC5BY,mLAEC,OACIrD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwC,EAAD,MACA1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMxC,UAAWC,KAAKC,MAAMC,QAAQC,MAC7CP,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACE5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACE7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACE9C,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,QAGJD,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAcC,QAAQ,SAExBjD,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACE5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACE7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACE9C,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,QAGJD,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAcC,QAAQ,gBAExBjD,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACE5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACE7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACE9C,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,QAGJD,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAcC,QAAQ,mBA5BKxB,aAqCnC4B,EAAqBhD,MAAQ,CAC1BC,QAASoB,IAAUC,OAAOC,YAGdC,kBAjDA,CACXtB,KAAM,CACFiC,MAAO,OACPW,SAAU,IACVC,gBAAiB,UA6CVvB,CAAmBwB,+CCxB5BC,6MACFC,MAAQ,CACJC,SAAU,GACVC,YAAc,MAGtBC,WAAY,WACR,IAAIC,EAAY,CACZH,SAAUI,EAAKL,MAAMC,SACrBC,YAAaG,EAAKL,MAAME,aAGnBI,UAAUC,KAAK,iBACrBC,UAAY,SAACC,GAChB,IAAIC,EAAKD,EAAME,OAAOC,OAAOC,YAAY,CAAC,QAAS,aACvCH,EAAGI,YAAY,QACrBC,IAAIX,GACVM,EAAGM,WAAa,SAACP,GACfJ,EAAKvD,MAAMmE,QAAQC,KAAK,UAE1BR,EAAGS,QAAU,SAACV,SAMlBW,aAAe,SAACC,EAAMZ,GAClBJ,EAAKiB,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBF,EAAOZ,EAAME,OAAOc,iFAGlC,OACHhF,EAAAC,EAAAC,cAACF,EAAAC,EAAMgF,SAAP,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,MACAlF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAWhC,SAAS,MAClBnD,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,KAAKC,MAAMC,QAAQG,UAAW2E,YAAU,EAACC,aAAa,OACzErF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEC,GAAG,cACHlE,MAAM,YACNlB,UAAWC,KAAKC,MAAMC,QAAQkF,UAC9BC,SAAUrF,KAAKuE,aAAae,KAAKtF,KAAK,YACtCuF,OAAO,SACPC,QAAQ,WAET5F,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACCC,GAAG,cACHlE,MAAM,cACNoE,SAAUrF,KAAKuE,aAAae,KAAKtF,KAAK,eACtCD,UAAWC,KAAKC,MAAMC,QAAQkF,UAC9BG,OAAO,SACPC,QAAQ,WAEV5F,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAQ1F,UAAYC,KAAKC,MAAMC,QAAQwF,YAAaC,QAAU3F,KAAKsD,WAAWgC,KAAKtF,MAAOwF,QAAQ,YAAY1D,MAAM,WAApH,YAIAlC,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAQD,QAAQ,YAAY1D,MAAM,aAAlC,oBAvDgBT,aAiEtB6B,EAAQjD,MAAQ,CACbC,QAASoB,IAAUC,OAAOC,YAGdC,kBAhGA,SAAAC,GAAK,MAAK,CACrBrB,UAAW,CACPuF,QAAS,OACTC,SAAU,OACV7C,gBAAiB,SAErBoC,UAAW,CACPU,WAAYpE,EAAMpB,QAAQ,GAC1BoF,YAAahE,EAAMpB,QAAQ,IAE7ByF,MAAO,CACLC,UAAW,IAEbC,KAAM,CACJ7D,MAAO,KAET8D,OAAQ,CACNX,OAAQ7D,EAAMpB,QAAQ,IAExB6F,MAAO,CACLP,QAAS,QAEXF,YAAa,CACTA,YAAc,MAyETjE,CAAmByB,WC/EnBkD,MAhBf,WACE,OACFxG,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACUzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAAC1F,UAAW2F,IACjC7G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAAC1F,UAAW4F,IACrC9G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,KAAK,cAAcC,OAAK,EAAC1F,UAAW6F,IAC3C/G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,KAAK,WAAWC,OAAK,EAAC1F,UAAW8F,IACxChH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,KAAK,IAAIzF,UAAW2F,OCNnCI,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzE,QACfmE,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KC9F/CtB,OAAOtD,UAAUC,KAAK,gBAAiB,GAG7C4E,gBAAkB,SAAS1E,GAE/B,IAAI2E,EAAW3E,EAAME,OAAOC,OAG5B,IAAKwE,EAASC,iBAAiBC,SAAS,QAAS,CAC7C,IAAIC,EAAQH,EAASI,kBAAkB,OAAQ,CAAEC,QAAS,SAAUC,eAAe,IACnFH,EAAMI,YAAY,WAAY,WAAY,CAAEC,QAAQ,IACpDL,EAAMI,YAAY,aAAc,aAAc,CAAEC,QAAQ,MCHpEC,IAASC,OACLrJ,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACEzG,EAAAC,EAAAC,cAACoJ,EAAD,OAEDC,SAASC,eAAe,SFQtB,SAAkB/B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI+B,IAAIC,qBAAwBvC,OAAOC,SAASuC,MACpDC,SAAWzC,OAAOC,SAASwC,OAIvC,OAGFzC,OAAO0C,iBAAiB,OAAQ,WAC9B,IAAMrC,EAAK,GAAAsC,OAAMJ,qBAAN,sBAEPzC,GAgEV,SAAiCO,EAAOC,GAEtCsC,MAAMvC,GACHK,KAAK,SAAAmC,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C3C,UAAUC,cAAc2C,MAAMzC,KAAK,SAAAC,GACjCA,EAAayC,aAAa1C,KAAK,WAC7BV,OAAOC,SAASoD,aAKpBjD,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAoC,CAAwBjD,EAAOC,GAI/BC,UAAUC,cAAc2C,MAAMzC,KAAK,WACjCO,QAAQC,IACN,gHAMJd,EAAgBC,EAAOC,ME/B/BE,iFCnBA+C,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.11e9f333.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport Assignment_Ind from '@material-ui/icons/AssignmentInd';\r\nimport CreditCard from '@material-ui/icons/CreditCard';\r\nimport CardTravel from '@material-ui/icons/CardTravel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({\r\n   root: {\r\n       flexGrow: 1,\r\n     },\r\n     paper: {\r\n       padding: '${theme.spacing.unit * 3}px',\r\n       textAlign: 'center',\r\n       color: theme.palette.text.secondary,\r\n       bottom :0,\r\n       position:'absolute',\r\n       width: '100%'\r\n     },\r\n})\r\n\r\nclass Home extends Component {\r\n   render() {\r\n       return (\r\n           <div className={this.props.classes.root}>\r\n               <Grid container spacing={8}>\r\n                   <Grid item xs={12}>\r\n                       <Paper className={this.props.classes.paper}>\r\n                           <BottomNavigation showLabels\r\n                               className={this.props.classes.root}>                              \r\n                               <BottomNavigationAction component={Link} to=\"bank\" label=\"Bank\" icon={<CreditCard />} />\r\n                               <BottomNavigationAction component={Link} to=\"government\" label=\"Government\" icon={<CardTravel />} /> \r\n                           </BottomNavigation>\r\n                       </Paper>\r\n                   </Grid>\r\n               </Grid>\r\n           </div>\r\n\r\n       )\r\n   }\r\n}\r\n\r\nHome.props = {\r\n   classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Home);","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport HomePage from '../homepage';\r\n\r\nconst styles = {\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: 'white',\r\n      },\r\n}\r\n\r\nclass BankContainer extends Component {\r\n   render() {\r\n       return (\r\n           <div>\r\n            <HomePage/>\r\n               <List className={this.props.classes.root}>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <ImageIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Add bank\"/>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <WorkIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Edit Bank\"/>\r\n      </ListItem>   \r\n    </List>\r\n           </div>\r\n       )\r\n   }\r\n}\r\n\r\nBankContainer.props = {\r\n   classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(BankContainer);","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport HomePage from '../homepage';\r\nconst styles = {\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: 'white',\r\n      },\r\n}\r\n\r\nclass GovernmentCointainer extends Component {\r\n   render() {\r\n       return (           \r\n           <div>\r\n               <HomePage />\r\n               <List className={this.props.classes.root}>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <ImageIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"TIN\"/>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <WorkIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"PhilHealth\"/>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <WorkIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"HDMF\"/>\r\n      </ListItem>\r\n    \r\n    </List>\r\n           </div>\r\n       )\r\n   }\r\n}\r\n\r\nGovernmentCointainer.props = {\r\n   classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(GovernmentCointainer);","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        backgroundColor: 'white'\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n      },\r\n      dense: {\r\n        marginTop: 16,  \r\n      },\r\n      menu: {\r\n        width: 200,\r\n      },\r\n      button: {\r\n        margin: theme.spacing(1),\r\n      },\r\n      input: {\r\n        display: 'none',\r\n      },\r\n      marginRight :{\r\n          marginRight : 20,\r\n      }\r\n})\r\n\r\nclass AddBank extends Component {\r\n    state = {\r\n        bankname :'',\r\n        bankaccount : ''\r\n}\r\n\r\ninsertBank =() =>{\r\n    var forInsert = {\r\n        bankname: this.state.bankname,\r\n        bankaccount :this.state.bankaccount,\r\n    }\r\n\r\n    let db = indexedDB.open(\"MyDataRichard\");\r\n    db.onsuccess = (event) => {\r\n    let tx = event.target.result.transaction(['bank'], \"readwrite\");\r\n    let store = tx.objectStore('bank');\r\n    store.put(forInsert);\r\n    tx.oncomplete = (event) => {\r\n      this.props.history.push('/bank')\r\n    }\r\n    tx.onerror = (event) => {\r\n     \r\n    }\r\n  }\r\n\r\n}\r\nhandleChange = (name, event) => {\r\n    this.setState({ [name]: event.target.value });\r\n  }\r\n   render() {\r\n       return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\">\r\n        <form className={this.props.classes.container} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"filled-name\"\r\n        label=\"Bank name\"\r\n        className={this.props.classes.textField}\r\n        onChange={this.handleChange.bind(this,'bankname')}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n       <TextField\r\n        id=\"filled-name\"\r\n        label=\"Bank number\"\r\n        onChange={this.handleChange.bind(this,'bankaccount')}\r\n        className={this.props.classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <Button className ={this.props.classes.marginRight} onClick ={this.insertBank.bind(this)} variant=\"contained\" color=\"primary\" >\r\n        Add Bank\r\n      </Button>\r\n\r\n      <Button variant=\"contained\" color=\"secondary\">\r\n        Cancel\r\n      </Button>\r\n      </form>\r\n      </Container>\r\n    </React.Fragment>\r\n       )\r\n   }\r\n}\r\n\r\nAddBank.props = {\r\n   classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(AddBank);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport bankcontainer from './components/bank/bankcontainer';\nimport governmentcontainer from './components/government/governmentcontainer';\nimport home from './components/homepage';\nimport addbank from './components/bank/addbank';\nimport { BrowserRouter , Switch, Route, Link } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n<BrowserRouter>\n          <Switch>\n              <Route path='/' exact component={home} />\n              <Route path='/bank' exact component={bankcontainer} />\n              <Route path='/government' exact component={governmentcontainer} />\n              <Route path='/addbank' exact component={addbank} />\n              <Route path='*' component={home} />\n              \n          </Switch>\n      \n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export function initializeDatabase () {\r\n    //request connection sa datatabase\r\n    var request = window.indexedDB.open(\"MyDataRichard\", 1);\r\n\r\n    //kapaga naopen na ung db\r\n    request.onupgradeneeded = function(event) {\r\n        //create table\r\n        var database = event.target.result;\r\n\r\n        //tignan kung may bank table na, kapag wala pa, create table at columns\r\n        if (!database.objectStoreNames.contains('bank')) {\r\n            var table = database.createObjectStore(\"bank\", { keyPath: \"bankId\", autoIncrement: true });\r\n            table.createIndex(\"bankName\", \"bankName\", { unique: false });\r\n            table.createIndex(\"bankNumber\", \"bankNumber\", { unique: false });\r\n        }\r\n        \r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Route, Link, BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport { initializeDatabase } from \"./components/database\";\n\ninitializeDatabase();\n\nReactDOM.render((\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  ), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}